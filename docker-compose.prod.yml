version: '3.8'

services:
  armin-app:
    # Pull image from GitHub Container Registry
    image: ghcr.io/horizontal-labs/armin-app:latest
    container_name: armin-frontend
    ports:
      - '10123:80'
    environment:
      - NODE_ENV=production
      - VITE_API_BASE_URL=https://armin-app.ddns.net/api
      # This URL will be injected at container startup, not build time
    restart: unless-stopped
    networks:
      - armin-network
    labels:
      com.centurylinklabs.watchtower.enable: "true"
      com.centurylinklabs.watchtower.scope: "armin-frontend"
    healthcheck:
      test: ['CMD', 'wget', '--no-verbose', '--tries=1', '--spider', 'http://localhost:80/']
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  # Watchtower - Automatically updates containers when new images are pushed
  watchtower-armin-frontend:
    image: containrrr/watchtower:latest
    container_name: watchtower-armin-frontend
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ~/.docker/config.json:/config.json:ro # For registry authentication
    environment:
      - WATCHTOWER_CLEANUP=false # Remove old images after updating
      - WATCHTOWER_INCLUDE_STOPPED=false
      - WATCHTOWER_INCLUDE_RESTARTING=true
      - WATCHTOWER_POLL_INTERVAL=60 # Check every 1 minute
      - WATCHTOWER_LABEL_ENABLE=true # Update all containers (set to true to only update labeled ones)
      - WATCHTOWER_SCOPE="armin-frontend"
      - DOCKER_CONFIG=/
    labels:
      # Prevent other Watchtowers from managing this Watchtower
      com.centurylinklabs.watchtower.enable: "false"
      com.centurylinklabs.watchtower.scope: "armin-frontend"
    restart: unless-stopped
    networks:
      - armin-network

networks:
  armin-network:
    driver: bridge
